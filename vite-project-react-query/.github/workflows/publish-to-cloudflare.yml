name: Publish to Cloudflare Pages
# https://www.youtube.com/watch?v=zmvlWMx3ZTs
on:
  push:
    branches: ["master"]

env:
  NODE_AUTH_TOKEN: ${{ secrets.PAGES_DEPLOYMENT }}
  CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
  CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
  OUT_DIST: dist

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "cloudflare-pages"
#   cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout üõéÔ∏è
        uses: actions/checkout@v3
      - name: Detect package manager üëª
        id: detect-package-manager
        run: |
          if [ -f "${{ github.workspace }}/yarn.lock" ]; then
            echo "::set-output name=manager::yarn"
            echo "::set-output name=command::install"
            echo "::set-output name=runner::yarn"
            exit 0
          elif [ -f "${{ github.workspace }}/package.json" ]; then
            echo "::set-output name=manager::npm"
            echo "::set-output name=command::ci"
            echo "::set-output name=runner::npx --no-install"
            exit 0
          else
            echo "Unable to determine packager manager"
            exit 1
          fi
      - name: Setup Node üçâ
        uses: actions/setup-node@v3
        with:
          cache: ${{ steps.detect-package-manager.outputs.manager }}
          node-version: "16.10.0"

      #   - name: Setup Pages üîß
      #     id: pages
      #     uses: actions/configure-pages@v1
      #     with:
      #       # Automatically inject basePath in your Next.js configuration file and disable
      #       # server side image optimization (https://nextjs.org/docs/api-reference/next/image#unoptimized).
      #       #
      #       # You may remove this line if you want to manage the configuration yourself.
      #       static_site_generator: next
      #   - name: Restore cache üíæ
      #     uses: actions/cache@v3
      #     with:
      #       path: |
      #         .next/cache
      #       # Generate a new cache whenever packages or source files change.
      #       key: ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-${{ hashFiles('**.[jt]s', '**.[jt]sx') }}
      #       # If source files changed but packages didn't, rebuild from a prior cache.
      #       restore-keys: |
      #         ${{ runner.os }}-nextjs-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}-
      - name: Install dependencies ü•ë
        run: ${{ steps.detect-package-manager.outputs.manager }} ${{ steps.detect-package-manager.outputs.command }}
      - name: Build with Vite üçÑ
        run: ${{ steps.detect-package-manager.outputs.runner }} npm run build
      #   - name: Static HTML export with Next.js ü•Ø
      #     run: ${{ steps.detect-package-manager.outputs.runner }} next export
      - name: Upload artifact ‚õ±Ô∏è
        uses: actions/upload-pages-artifact@v1
        with:
          name: $OUT_DIST
          path: "./$OUT_DIST"
          retention-days: 30

  # Deployment job
  deploy:
    needs: build
    environment:
      name: cloudflare-pages
      url: ${{ steps.deployment.outputs.url }}
    runs-on: ubuntu-latest
    permissions:
      contents: read
      deployments: write
    name: Publish to Cloudflare Pages
    steps:
      # - name: Checkout
      #   uses: actions/checkout@v3

      # Run a build step here if your project requires
      - name: Download build artifact
        uses: actions/download-artifact@v3
        with:
          name: $OUT_DIST
          path: "./$OUT_DIST"
      - name: Take a look at the directory ü§î
        run: ls
      - name: Unzip artifact ü§ê
        run: tar -xvf ./$OUT_DIST/artifact.tar -C ./$OUT_DIST && rm ./$OUT_DIST/artifact.tar
      - name: Publish to Cloudflare Pages
        id: deployment
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          accountId: ${{secrets.CLOUDFLARE_ACCOUNT_ID}}
          projectName: ${{vars.CLOUDFLARE_PROJECT_NAME}}
          directory: ./$OUT_DIST
          # Optional: Enable this if you want to have GitHub Deployments triggered
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}
          # Optional: Switch what branch you are publishing to.
          # By default this will be the branch which triggered this workflow
          branch: master
          # Optional: Change the working directory
          #   workingDirectory: my-site
          # Optional: Change the Wrangler version, allows you to point to a specific version or a tag such as `beta`
          wranglerVersion: "3"
